{
    "AAA": {
        "authentication": {
            "login": "radius,local"
        },
        "authorization": {
            "commands": "local"
        }
    },
    "BGP_GLOBALS": {
        "default": {
            "always_compare_med": "false",
            "ebgp_requires_policy": "false",
            "external_compare_router_id": "false",
            "fast_external_failover": "true",
            "holdtime": "180",
            "ignore_as_path_length": "false",
            "keepalive": "60",
            "load_balance_mp_relax": "false",
            "local_asn": "{{ asn }}",
            "log_nbr_state_changes": "true",
            "network_import_check": "true",
            "router_id": "{{ evpn_endpoint | ansible.utils.ipaddr('address') }}"
        }
    },
    "BGP_GLOBALS_AF": {
        "default|ipv4_unicast": {
            "max_ebgp_paths": "1",
            "max_ibgp_paths": "1",
            "route_flap_dampen": "false"
        },
        "default|l2vpn_evpn": {
            "advertise-all-vni": "true",
            "dad-enabled": "true"
        }
    },
    "BGP_GLOBALS_EVPN_VNI": {
{% for i in vlans | selectattr('vni', 'defined') %}
        "default|L2VPN_EVPN|{{ i.vni }}": {
            "export-rts": [
                "{{ i.vid }}:{{ i.vni }}"
            ],
            "import-rts": [
                "{{ i.vid }}:{{ i.vni }}"
            ],
            "route-distinguisher": "{{ evpn_endpoint | ansible.utils.ipaddr('address') }}:{{ i.vid }}"
        }
{% if not loop.last %},{% endif %}
{% endfor %}
    },
    "BGP_NEIGHBOR": {
{% for i in bgp_peer %}
        "default|{{ i.neighbor }}": {
            "asn": "{{ i.remote_as }}",
            "peer_group_name": "{{ i.group }}"
        }
{% if not loop.last %},{% endif %}
{% endfor %}
    },
    "BGP_PEER_GROUP": {
        "default|EVPN": {
            "admin_status": "true",
            "conn_retry": "30",
            "ebgp_multihop": "true",
            "ebgp_multihop_ttl": "2",
            "local_addr": "Loopback0",
            "min_adv_interval": "0",
            "name": "EVPN Connection",
            "passive_mode": "false"
        },
        "default|UNDER": {
            "admin_status": "true",
            "conn_retry": "30",
            "ebgp_multihop": "false",
            "min_adv_interval": "0",
            "name": "Underlay Connection",
            "passive_mode": "false"
        }
    },
    "BGP_PEER_GROUP_AF": {
        "default|EVPN|l2vpn_evpn": {
            "admin_status": "true"
        },
        "default|UNDER|ipv4_unicast": {
            "admin_status": "true",
            "max_prefix_warning_only": "false",
            "rrclient": "false",
            "send_community": "both",
            "send_default_route": "false"
        }
    },
    "CLASSIFIER_TABLE": {
        "class-oob-arp": {
            "DESCRIPTION": "",
            "ETHER_TYPE": "0x806",
            "MATCH_TYPE": "FIELDS"
        },
        "class-oob-dhcp-client": {
            "DESCRIPTION": "",
            "ETHER_TYPE": "0x800",
            "IP_PROTOCOL": "17",
            "L4_DST_PORT": "68",
            "MATCH_TYPE": "FIELDS"
        },
        "class-oob-dhcp-server": {
            "DESCRIPTION": "",
            "ETHER_TYPE": "0x800",
            "IP_PROTOCOL": "17",
            "L4_DST_PORT": "67",
            "MATCH_TYPE": "FIELDS"
        },
        "class-oob-ip-multicast": {
            "DESCRIPTION": "",
            "DST_IP": "224.0.0.0/4",
            "ETHER_TYPE": "0x800",
            "MATCH_TYPE": "FIELDS"
        },
        "class-oob-ipv6-multicast": {
            "DESCRIPTION": "",
            "DST_IPV6": "ff00::/8",
            "ETHER_TYPE": "0x86DD",
            "MATCH_TYPE": "FIELDS"
        }
    },
    "COREDUMP": {
        "config": {
            "enabled": "true"
        }
    },
    "DEVICE_METADATA": {
        "localhost": {
            "default_config_profile": "l3",
            "frr_mgmt_framework_config": "true",
            "hostname": "sonic",
            "hwsku": "DellEMC-S5248f-P-25G-DPB",
            "mac": "50:00:00:08:00:0a",
            "platform": "x86_64-kvm_x86_64-r0",
            "type": "LeafRouter"
        }
    },
    "ECMP_LOADSHARE_TABLE_IPV4": {
        "ipv4": {
            "ipv4_dst_ip": "true",
            "ipv4_l4_dst_port": "true",
            "ipv4_l4_src_port": "true",
            "ipv4_protocol": "true",
            "ipv4_src_ip": "true"
        }
    },
    "ECMP_LOADSHARE_TABLE_IPV6": {
        "ipv6": {
            "ipv6_dst_ip": "true",
            "ipv6_l4_dst_port": "true",
            "ipv6_l4_src_port": "true",
            "ipv6_next_hdr": "true",
            "ipv6_src_ip": "true"
        }
    },
    "EVPN_ETHERNET_SEGMENT": {
{% for i in interfaces | selectattr('esi', 'defined') %}
{% set esi_num = i.esi | replace(':', '') %}
        "{{ esi_num | slice(10) | map('join', '') | join(':') }}": {
            "df_pref": "1",
            "ifname": "{{ i.name }}"
        }
{% if not loop.last %},{% endif %}
{% endfor %}
    },
    "FEATURE": {
        "bgp": {
            "auto_restart": "enabled",
            "check_up_status": "True",
            "has_global_scope": "False",
            "has_per_asic_scope": "True",
            "has_timer": "False",
            "state": "always_enabled"
        },
        "database": {
            "auto_restart": "enabled",
            "check_up_status": "False",
            "has_global_scope": "True",
            "has_per_asic_scope": "True",
            "has_timer": "False",
            "state": "always_enabled"
        },
        "dhcp_relay": {
            "auto_restart": "enabled",
            "check_up_status": "True",
            "has_global_scope": "True",
            "has_per_asic_scope": "False",
            "has_timer": "False",
            "state": "enabled"
        },
        "eventd": {
            "auto_restart": "enabled",
            "check_up_status": "True",
            "has_global_scope": "True",
            "has_per_asic_scope": "False",
            "has_timer": "False",
            "state": "always_enabled"
        },
        "gbsyncd": {
            "auto_restart": "enabled",
            "check_up_status": "False",
            "has_global_scope": "True",
            "has_per_asic_scope": "False",
            "has_timer": "False",
            "state": "enabled"
        },
        "iccpd": {
            "auto_restart": "enabled",
            "check_up_status": "True",
            "has_global_scope": "True",
            "has_per_asic_scope": "False",
            "has_timer": "False",
            "state": "enabled"
        },
        "l2mcd": {
            "auto_restart": "enabled",
            "check_up_status": "True",
            "has_global_scope": "True",
            "has_per_asic_scope": "False",
            "has_timer": "False",
            "state": "enabled"
        },
        "lldp": {
            "auto_restart": "enabled",
            "check_up_status": "True",
            "has_global_scope": "True",
            "has_per_asic_scope": "True",
            "has_timer": "False",
            "state": "enabled"
        },
        "macsec": {
            "auto_restart": "enabled",
            "check_up_status": "True",
            "has_global_scope": "True",
            "has_per_asic_scope": "False",
            "has_timer": "False",
            "state": "enabled"
        },
        "mgmt-framework": {
            "auto_restart": "enabled",
            "check_up_status": "True",
            "has_global_scope": "True",
            "has_per_asic_scope": "False",
            "has_timer": "False",
            "state": "always_enabled"
        },
        "nat": {
            "auto_restart": "enabled",
            "check_up_status": "True",
            "has_global_scope": "True",
            "has_per_asic_scope": "False",
            "has_timer": "False",
            "state": "enabled"
        },
        "pmon": {
            "auto_restart": "enabled",
            "check_up_status": "True",
            "has_global_scope": "True",
            "has_per_asic_scope": "False",
            "has_timer": "False",
            "state": "always_enabled"
        },
        "radv": {
            "auto_restart": "enabled",
            "check_up_status": "True",
            "has_global_scope": "True",
            "has_per_asic_scope": "False",
            "has_timer": "False",
            "state": "enabled"
        },
        "sflow": {
            "auto_restart": "enabled",
            "check_up_status": "True",
            "has_global_scope": "True",
            "has_per_asic_scope": "False",
            "has_timer": "False",
            "state": "enabled"
        },
        "snmp": {
            "auto_restart": "enabled",
            "check_up_status": "True",
            "has_global_scope": "True",
            "has_per_asic_scope": "False",
            "has_timer": "False",
            "state": "enabled"
        },
        "stp": {
            "auto_restart": "enabled",
            "check_up_status": "True",
            "has_global_scope": "True",
            "has_per_asic_scope": "False",
            "has_timer": "False",
            "state": "enabled"
        },
        "swss": {
            "auto_restart": "enabled",
            "check_up_status": "True",
            "has_global_scope": "True",
            "has_per_asic_scope": "True",
            "has_timer": "False",
            "state": "always_enabled"
        },
        "syncd": {
            "auto_restart": "enabled",
            "check_up_status": "True",
            "has_global_scope": "False",
            "has_per_asic_scope": "True",
            "has_timer": "False",
            "state": "always_enabled"
        },
        "tam": {
            "auto_restart": "enabled",
            "check_up_status": "True",
            "has_global_scope": "True",
            "has_per_asic_scope": "False",
            "has_timer": "False",
            "state": "enabled"
        },
        "teamd": {
            "auto_restart": "enabled",
            "check_up_status": "True",
            "has_global_scope": "False",
            "has_per_asic_scope": "True",
            "has_timer": "False",
            "state": "always_enabled"
        },
        "telemetry": {
            "auto_restart": "enabled",
            "check_up_status": "True",
            "has_global_scope": "True",
            "has_per_asic_scope": "False",
            "has_timer": "False",
            "state": "enabled"
        },
        "udld": {
            "auto_restart": "enabled",
            "check_up_status": "True",
            "has_global_scope": "True",
            "has_per_asic_scope": "False",
            "has_timer": "False",
            "state": "enabled"
        },
        "vrrp": {
            "auto_restart": "enabled",
            "check_up_status": "True",
            "has_global_scope": "True",
            "has_per_asic_scope": "False",
            "has_timer": "False",
            "state": "enabled"
        }
    },
    "FLEX_COUNTER_TABLE": {
        "PFCWD": {
            "FLEX_COUNTER_STATUS": "enable"
        },
        "PG_WATERMARK": {
            "FLEX_COUNTER_STATUS": "enable"
        },
        "PHY": {
            "FLEX_COUNTER_STATUS": "enable"
        },
        "PORT": {
            "FLEX_COUNTER_STATUS": "enable"
        },
        "QUEUE": {
            "FLEX_COUNTER_STATUS": "enable"
        },
        "QUEUE_WATERMARK": {
            "FLEX_COUNTER_STATUS": "enable"
        },
        "RIF": {
            "FLEX_COUNTER_STATUS": "enable"
        },
        "TUNNEL": {
            "FLEX_COUNTER_STATUS": "enable"
        }
    },
    "HARDWARE": {
        "ACCESS_LIST": {
            "COUNTER_MODE": "per-rule",
            "LOOKUP_MODE": "optimized"
        }
    },
    "HOST_FEATURE": {
        "caclmgrd": {
            "check_up_status": "False"
        },
        "cron": {
            "check_up_status": "False"
        },
        "docker": {
            "check_up_status": "False"
        },
        "hostcfgd": {
            "check_up_status": "False"
        },
        "warmboot-finalizer": {
            "check_up_status": "True"
        },
        "xphyd": {
            "check_up_status": "True"
        }
    },
    "INTERFACE": {
{% for i in interfaces | selectattr ('address', 'defined') %}
        "{{ i.name }}": {},
        "{{ i.name }}|{{ i.address }}": {}
{% if not loop.last %},{% endif %}
{% endfor %}
    },
    "KDUMP": {
        "config": {
            "enabled": "true",
            "memory": "0M-2G:256M,2G-4G:256M,4G-8G:384M,8G-:448M",
            "num_dumps": "3"
        }
    },
    "LOOPBACK": {
        "Loopback0": {
            "admin_status": "up",
            "description": "EVPN"
        },
        "Loopback1": {
            "admin_status": "up",
            "description": "VXLAN"
        }
    },
    "LOOPBACK_INTERFACE": {
        "Loopback0": {},
        "Loopback0|{{ evpn_endpoint }}": {},
        "Loopback1": {},
        "Loopback1|{{ vxlan_endpoint }}": {}
    },
    "MAB_PORT_CONFIG_TABLE": {
        "Ethernet0": {},
        "Ethernet1": {},
        "Ethernet2": {},
        "Ethernet3": {},
        "Ethernet4": {},
        "Ethernet5": {},
        "Ethernet6": {},
        "Ethernet7": {},
        "Ethernet8": {}
    },
    "MGMT_INTERFACE": {
        "eth0": {},
        "eth0|{{ management }}": {}
    },
    "MGMT_PORT": {
        "eth0": {
            "admin_status": "up",
            "autoneg": "true",
            "description": "Management0",
            "mtu": "1500",
            "speed": "1000"
        }
    },
    "MGMT_VRF_CONFIG": {
        "vrf_global": {
            "mgmtVrfEnabled": "true"
        }
    },
    "NAT_GLOBAL": {
        "Values": {
            "admin_mode": "disabled",
            "nat_tcp_timeout": "86400",
            "nat_timeout": "600",
            "nat_udp_timeout": "300"
        }
    },
    "NEIGH_GLOBAL": {
        "Values": {
            "ipv4_arp_timeout": "1800",
            "ipv6_nd_cache_expiry": "1800"
        }
    },
    "PAC_PORT_CONFIG_TABLE": {
        "Ethernet0": {},
        "Ethernet1": {},
        "Ethernet2": {},
        "Ethernet3": {},
        "Ethernet4": {},
        "Ethernet5": {},
        "Ethernet6": {},
        "Ethernet7": {},
        "Ethernet8": {}
    },
    "POLICY_BINDING_TABLE": {
        "CtrlPlane": {
            "INGRESS_QOS_POLICY": "oob-qos-policy"
        }
    },
    "POLICY_SECTIONS_TABLE": {
        "oob-qos-policy|class-oob-arp": {
            "DESCRIPTION": "",
            "PRIORITY": "1010",
            "SET_POLICER_CIR": "256000"
        },
        "oob-qos-policy|class-oob-dhcp-client": {
            "DESCRIPTION": "",
            "PRIORITY": "1020",
            "SET_POLICER_CIR": "512000"
        },
        "oob-qos-policy|class-oob-dhcp-server": {
            "DESCRIPTION": "",
            "PRIORITY": "1015",
            "SET_POLICER_CIR": "512000"
        },
        "oob-qos-policy|class-oob-ip-multicast": {
            "DESCRIPTION": "",
            "PRIORITY": "1000",
            "SET_POLICER_CIR": "256000"
        },
        "oob-qos-policy|class-oob-ipv6-multicast": {
            "DESCRIPTION": "",
            "PRIORITY": "1005",
            "SET_POLICER_CIR": "256000"
        }
    },
    "POLICY_TABLE": {
        "oob-qos-policy": {
            "DESCRIPTION": "QoS Ratelimiting policy for OOB port",
            "TYPE": "QOS"
        }
    },
    "PORT": {
        "Ethernet0": {
            "admin_status": "up",
            "adv_speeds": "all",
            "alias": "Eth1/1",
            "autoneg": "off",
            "description": "TO:spine",
            "fec": "none",
            "index": "1",
            "lanes": "49",
            "link_training": "off",
            "mtu": "9100",
            "speed": "25000",
            "unreliable_los": "auto"
        },
        "Ethernet1": {
            "admin_status": "down",
            "adv_speeds": "all",
            "alias": "Eth1/2",
            "autoneg": "off",
            "fec": "none",
            "index": "2",
            "lanes": "50",
            "link_training": "off",
            "mtu": "9100",
            "speed": "25000",
            "unreliable_los": "auto"
        },
        "Ethernet2": {
            "admin_status": "down",
            "adv_speeds": "all",
            "alias": "Eth1/3",
            "autoneg": "off",
            "fec": "none",
            "index": "3",
            "lanes": "51",
            "link_training": "off",
            "mtu": "9100",
            "speed": "25000",
            "unreliable_los": "auto"
        },
        "Ethernet3": {
            "admin_status": "down",
            "adv_speeds": "all",
            "alias": "Eth1/4",
            "autoneg": "off",
            "fec": "none",
            "index": "4",
            "lanes": "52",
            "link_training": "off",
            "mtu": "9100",
            "speed": "25000",
            "unreliable_los": "auto"
        },
        "Ethernet4": {
            "admin_status": "down",
            "adv_speeds": "all",
            "alias": "Eth1/5",
            "autoneg": "off",
            "fec": "none",
            "index": "5",
            "lanes": "57",
            "link_training": "off",
            "mtu": "9100",
            "speed": "25000",
            "unreliable_los": "auto"
        },
        "Ethernet5": {
            "admin_status": "down",
            "adv_speeds": "all",
            "alias": "Eth1/6",
            "autoneg": "off",
            "fec": "none",
            "index": "6",
            "lanes": "58",
            "link_training": "off",
            "mtu": "9100",
            "speed": "25000",
            "unreliable_los": "auto"
        },
        "Ethernet6": {
            "admin_status": "down",
            "adv_speeds": "all",
            "alias": "Eth1/7",
            "autoneg": "off",
            "fec": "none",
            "index": "7",
            "lanes": "59",
            "link_training": "off",
            "mtu": "9100",
            "speed": "25000",
            "unreliable_los": "auto"
        },
        "Ethernet7": {
            "admin_status": "down",
            "adv_speeds": "all",
            "alias": "Eth1/8",
            "autoneg": "off",
            "fec": "none",
            "index": "8",
            "lanes": "60",
            "link_training": "off",
            "mtu": "9100",
            "speed": "25000",
            "unreliable_los": "auto"
        },
        "Ethernet8": {
            "admin_status": "up",
            "adv_speeds": "10000,1000",
            "alias": "Eth1/9",
            "autoneg": "on",
            "description": "TO:Coustomer",
            "duplex": "full",
            "fec": "none",
            "index": "9",
            "lanes": "61",
            "link_training": "off",
            "mtu": "9100",
            "speed": "1000",
            "unreliable_los": "auto",
            "valid_speeds": "10000,1000"
        }
    },
    "PORTCHANNEL": {
{% for interface in interfaces | selectattr('name', 'match', 'PortChannel.*') %}
{% set esi_num = interface.esi | replace(':', '') %}
        "{{ interface.name }}": {
            "admin_status": "up",
            "description": "TO:Customer",
            "system_mac": "{{ esi_num[-12:] | slice(6) | map('join', '') | join(':') }}",
            "tagged_vlans": [
{% for vlan in interface.allowed_vlan %}
                "{{ vlan }}"
{% if not loop.last %},{% endif %}
{% endfor %}
            ]
        }
{% if not loop.last %},{% endif %}
{% endfor %}
    },
    "PORTCHANNEL_MEMBER": {
{% for i in interfaces | selectattr('aggrigate', 'defined') %}
        "PortChannel{{ i.aggrigate }}|{{ i.name }}": {}
{% if not loop.last %},{% endif %}
{% endfor %}
    },
    "PORT_GROUP": {
        "1": {
            "speed": "10000"
        },
        "2": {
            "speed": "10000"
        },
        "3": {
            "speed": "10000"
        }
    },
    "RADIUS": {
        "global": {
            "auth_type": "pap",
            "passkey": "U2FsdGVkX1/Uw9lzw40uipbrquqPOyJ75E7aBzvUrVSNiHWZ0FjxVlZWMAJHSrN3",
            "statistics": "true",
            "timeout": "5"
        }
    },
    "RADIUS_SERVER": {
{% for i in radius_server %}
        "{{ i.host }}": {
            "auth_port": "1812",
            "src_intf": "eth0",
            "vrf": "mgmt"
        }
{% if not loop.last %},{% endif %}
{% endfor %}
    },
    "ROUTE_REDISTRIBUTE": {
        "default|connected|bgp|ipv4": {}
    },
    "SSH_SERVER_VRF": {
        "mgmt": {
            "port": "22"
        }
    },
    "STATIC_ROUTE": {
        "mgmt|0.0.0.0/0": {
            "ifname": "eth0"
        }
    },
    "SWITCH": {
        "switch": {
            "fdb_aging_time": "600"
        }
    },
    "VERSIONS": {
        "DATABASE": {
            "VERSION": "version_4_1_1"
        }
    },
    "VLAN": {
{% for vlan in vlans %}
        "Vlan{{ vlan.vid }}": {
            "admin_status": "up",
            "description": "{{ vlan.name }}",
            "members": [
{% for interface in interfaces | selectattr('allowed_vlan', 'defined')| selectattr('allowed_vlan', 'eq', vlan.vid) %}
                "{{ interface.name }}"
{% if not loop.last %},{% endif %}
{% endfor %}
            ],
            "vlanid": "{{ vlan.vid }}"
        }
{% if not loop.last %},{% endif %}
{% endfor %}
    },
    "VLAN_MEMBER": {
{% for interface in interfaces | selectattr('allowed_vlan', 'defined') %}
{% for vlan in interface.allowed_vlan %}
        "Vlan{{ vlan }}|{{ interface.name }}": {
            "tagging_mode": "tagged"
        }
{% if not loop.last %},{% endif %}
{% endfor %}
{% endfor %}
    },
    "VRF": {
{% for i in vlans | selectattr('vni', 'defined') %}
        "Vrf_{{ i.vni }}": {
            "fallback": "false",
            "vni": "0"
        },
{% endfor %}
        "default": {
            "enabled": "true"
        }
    },
    "VXLAN_EVPN_NVO": {
        "nvo1": {
            "source_vtep": "vtep-01"
        }
    },
    "VXLAN_TUNNEL": {
        "vtep-01": {
            "dscp": "0",
            "qos-mode": "pipe",
            "src_intf": "Loopback1",
            "src_ip": "{{ vxlan_endpoint | ansible.utils.ipaddr('address') }}"
        }
    },
    "VXLAN_TUNNEL_MAP": {
{% for i in vlans | selectattr('vni', 'defined') %}
        "vtep-01|map_{{ i.vni }}_Vlan{{ i.vid }}": {
            "vlan": "Vlan{{ i.vid }}",
            "vni": "{{ i.vni }}"
        }
{% if not loop.last %},{% endif %}
{% endfor %}
    },
    "ZTP": {
        "config": {
            "admin-mode": "false"
        }
    }
}
